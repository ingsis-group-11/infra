services:
  # Application services
  proxy:
    container_name: "reverse-proxy"
    image: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./static/:/usr/share/nginx/html:ro
      - ./conf.d/nginx-${ENVIRONMENT}.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - frontend:/usr/share/nginx/html
    depends_on:
      - snippet-manager
      - printscript-service
      - permission-manager
      - asset-service
    networks:
      - app-network
      
  snippet-manager:
    container_name: "snippet-manager"
    image: ghcr.io/ingsis-group-11/snippet-manager:${IMAGE_TAG}
    depends_on:
      - db-snippet
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-snippet:5432/snippet-manager-db
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=admin
      - PERMISSION_MANAGER_URL=http://permission-manager:8080
      - PRINTSCRIPT_SERVICE_URL=http://printscript-service:8080
      - ASSET_MANAGER_URL=http://asset-service:8080
      - AUTH0_AUDIENCE=https://printscript.com
      - AUTH_SERVER_URI=https://dev-zljhtjva3ftqlrz7.us.auth0.com/
      - AUTH_CLIENT_ID=0iZoTXdEtVcwJGDVKwwHkCV6hVEEHUmu
      - AUTH_CLIENT_SECRET=CY1qSG-FT7CAnDlUiooTnlu64cWPWo1tqK-kR2p9B0ujpJc5avuvft3AWi4-0Kgb
      - DOCKER_PORT=8080
    networks:
      - app-network

  printscript-service:
    container_name: "printscript-service"
    image: ghcr.io/ingsis-group-11/printscript-service:${IMAGE_TAG}
    environment:
      - SNIPPET_MANAGER_URL=http://snippet-manager:8080
      - PERMISSION_MANAGER_URL=http://permission-manager:8080
      - AUTH0_AUDIENCE=https://printscript.com
      - AUTH_SERVER_URI=https://dev-zljhtjva3ftqlrz7.us.auth0.com/
      - AUTH_CLIENT_ID=0iZoTXdEtVcwJGDVKwwHkCV6hVEEHUmu
      - AUTH_CLIENT_SECRET=CY1qSG-FT7CAnDlUiooTnlu64cWPWo1tqK-kR2p9B0ujpJc5avuvft3AWi4-0Kgb
      - DOCKER_PORT=8080
    networks:
      - app-network

  permission-manager:
    container_name: "permission-manager"
    image: ghcr.io/ingsis-group-11/permission-manager:${IMAGE_TAG}
    depends_on:
      - db-permissions
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-permissions:5432/permission-manager-db
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=admin
      - SNIPPET_MANAGER_URL=http://snippet-manager:8080
      - PRINTSCRIPT_SERVICE_URL=http://printscript-service:8080
      - AUTH0_AUDIENCE=https://printscript.com
      - AUTH_SERVER_URI=https://dev-zljhtjva3ftqlrz7.us.auth0.com/
      - AUTH_CLIENT_ID=0iZoTXdEtVcwJGDVKwwHkCV6hVEEHUmu
      - AUTH_CLIENT_SECRET=CY1qSG-FT7CAnDlUiooTnlu64cWPWo1tqK-kR2p9B0ujpJc5avuvft3AWi4-0Kgb
      - DOCKER_PORT=8080
    networks:
      - app-network

  frontend:
    image: ghcr.io/ingsis-group-11/printscript-ui:${IMAGE_TAG}
    environment:
      - VITE_SNIPPET_MANAGER_URL=https://printscript-dev.brazilsouth.cloudapp.azure.com/snippet-manager/api
      - VITE_PERMISSION_MANAGER_URL=https://printscript-dev.brazilsouth.cloudapp.azure.com/permission-manager/api/permission
      - VITE_PRINTSCRIPT_SERVICE_URL=https://printscript-dev.brazilsouth.cloudapp.azure.com/printscript-service/api/
      - VITE_AUTH0_AUDIENCE=https://printscript.com
      - VITE_AUTH0_DOMAIN=https://dev-zljhtjva3ftqlrz7.us.auth0.com/
      - VITE_AUTH0_CLIENT_ID=0iZoTXdEtVcwJGDVKwwHkCV6hVEEHUmu
      - VITE_AUTH_CLIENT_SECRET=CY1qSG-FT7CAnDlUiooTnlu64cWPWo1tqK-kR2p9B0ujpJc5avuvft3AWi4-0Kgb
    networks:
      - app-network

  # Database services
  db-permissions:
    image: postgres:latest
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=permission-manager-db
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    networks:
      - app-network
    volumes:
      - postgres_data_permissions:/var/lib/postgresql/data

  db-snippet:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=snippet-manager-db
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    networks:
      - app-network
    volumes:
      - postgres_data_snippet:/var/lib/postgresql/data

  asset-service:
    container_name: "asset-service"
    image: ghcr.io/austral-ingsis/snippet-asset-service:latest
    ports:
      - "8082:8080"
    environment:
      AZURE_HOST: "http://azurite"
      NEW_RELIC_APP_NAME: "asset-service"
      NEW_RELIC_AGENT_ENABLED: false
    depends_on:
      - azurite
    networks:
      - app-network

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    hostname: azurite
    restart: always
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
    volumes:
      - blob:/workspace
    networks:
      - app-network

# Other configurations
volumes:
  postgres_data_snippet:
  postgres_data_permissions:
  blob:
  frontend:

networks:
  app-network:
    driver: bridge
