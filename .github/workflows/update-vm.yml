name: Deploy Service

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string

    secrets:
      VM_PROD_IP:
        required: true
      VM_DEV_IP:
        required: true
      VM_USER:
        required: true
      SSH_PRIVATE_KEY_PROD:
        required: true
      SSH_PRIVATE_KEY_DEV:
        required: true

jobs:
  pull-to-vms:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Add PEM Key to SSH Agent
        env:
          PEM_KEY: ${{ secrets.SSH_PRIVATE_KEY_PROD }}
        if: inputs.environment == 'prod'
        run: |
          echo "$PEM_KEY" > vm_key.pem
          chmod 600 vm_key.pem
          eval "$(ssh-agent -s)"
          ssh-add vm_key.pem

      - name: Add PEM Key to SSH Agent
        env:
          PEM_KEY: ${{ secrets.SSH_PRIVATE_KEY_DEV }}
        if: inputs.environment != 'prod'
        run: |
          echo "$PEM_KEY" > vm_key.pem
          chmod 600 vm_key.pem
          eval "$(ssh-agent -s)"
          ssh-add vm_key.pem

      - name: Pull updates on VM (Production)
        uses: appleboy/ssh-action@v1.1.0
        if: inputs.environment == 'prod'
        with:
          host: ${{ secrets.VM_PROD_IP }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY_PROD }}
          script: |
            cd printScript/infra
            source ~/.bashrc
            git pull origin main
            sudo docker compose down
            sudo docker compose up --pull always --build -d

      - name: Pull updates on VM (Development)
        uses: appleboy/ssh-action@v1.1.0
        if: inputs.environment != 'prod'
        with:
          host: ${{ secrets.VM_DEV_IP }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY_DEV }}
          script: |
            cd printScript/infra
            source ~/.bashrc
            git pull origin main
            sudo docker compose down
            sudo docker compose up --pull always --build -d

      - name: Cleanup PEM Key
        if: always()
        run: |
          if [ -n "$SSH_AGENT_PID" ]; then
            ssh-agent -k
          fi
          rm -f vm_key.pem